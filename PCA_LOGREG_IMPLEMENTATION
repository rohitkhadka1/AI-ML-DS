from sklearn.decomposition import PCA
from sklearn.datasets import load_iris
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score


data = load_iris()
X = pd.DataFrame(data.data, columns = data.feature_names)
y = data.target
# y = pd.DataFrame(data.target, columns = ['species'])
# y.head()
X.head()
print(y)

X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.2,random_state = 40)

PCAModel = PCA(n_components=2)
X_train_PCA = PCAModel.fit_transform(X_train)
X_test_PCA = PCAModel.transform(X_test)

# print("Original features:", X.shape[1])
# print("Features after PCA", XPCA.shape[1])

LogReg = LogisticRegression()
LogReg.fit(X_train_PCA, y_train)
y_pred = LogReg.predict(X_test_PCA)
accuracy = accuracy_score(y_test, y_pred)
print(f"Model has the accuracy of:{accuracy}")
